{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\Drouot\\\\drouot\\\\src\\\\components\\\\searchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"the search value\");\n\n  const handleInputChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  console.log(searchValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"IybEtRKYUso5mJE7vIkbhfO2N1Y=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/Paul/Desktop/Drouot/drouot/src/components/searchBar/SearchBar.js"],"names":["React","useState","SearchBar","searchValue","setSearchValue","handleInputChange","event","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,kBAAD,CAA9C;;AAEA,QAAMI,iBAAiB,GAAIC,KAAD,IAAW;AACjCF,IAAAA,cAAc,CAAEE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAd;AACH,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,WAA1B;AAAuC,MAAA,QAAQ,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdD;;GAAMH,S;;KAAAA,S;AAeN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './SearchBar.css'\r\n\r\nconst SearchBar = () => {\r\n    const [searchValue, setSearchValue] = useState(\"the search value\")\r\n\r\n    const handleInputChange = (event) => {\r\n        setSearchValue (event.target.value)\r\n    }\r\n\r\n    console.log(searchValue)\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={searchValue} onChange={handleInputChange}></input>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}