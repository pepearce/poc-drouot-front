{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Documents\\\\git\\\\drouotGitRepo\\\\miniDrouot\\\\drouot_Front\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport './styles/globalStyles.css';\nimport { createStore } from 'redux';\nimport allReducers from './reducers';\nimport { Provider } from 'react-redux';\nimport { sessionService } from 'redux-react-session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reactContentRoot = document.getElementById(\"root\");\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()); // Set options for session service\n\nconst options = {\n  refreshOnCheckAuth: true,\n  redirectPath: '/home',\n  driver: 'COOKIES'\n}; // Initialize session service from redux\n\nsessionService.initSessionService(store, options).then(() => console.log('Redux React Session is ready')); // Provider gives access to the store to the whole app\n\nReactDom.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 1\n}, this), reactContentRoot);","map":{"version":3,"sources":["C:/Users/Paul/Documents/git/drouotGitRepo/miniDrouot/drouot_Front/src/index.js"],"names":["React","ReactDom","App","createStore","allReducers","Provider","sessionService","reactContentRoot","document","getElementById","store","window","__REDUX_DEVTOOLS_EXTENSION__","options","refreshOnCheckAuth","redirectPath","driver","initSessionService","then","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,MAAMC,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACA,MAAMC,KAAK,GAAGP,WAAW,CAACC,WAAD,EAAaO,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAApD,CAAzB,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AAAEC,EAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,EAAAA,YAAY,EAAE,OAA1C;AAAmDC,EAAAA,MAAM,EAAE;AAA3D,CAAhB,C,CACA;;AACAV,cAAc,CAACW,kBAAf,CAAkCP,KAAlC,EAAyCG,OAAzC,EACCK,IADD,CACM,MAAMC,OAAO,CAACC,GAAR,CAAY,8BAAZ,CADZ,E,CAGA;;AACAnB,QAAQ,CAACoB,MAAT,eACA,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,KAAjB;AAAA,yBACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QADA,EAIEH,gBAJF","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\nimport './styles/globalStyles.css'\nimport {createStore} from 'redux'\nimport allReducers from './reducers'\nimport {Provider} from 'react-redux'\nimport { sessionService } from 'redux-react-session';\n\nconst reactContentRoot = document.getElementById(\"root\")\nconst store = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n// Set options for session service\nconst options = { refreshOnCheckAuth: true, redirectPath: '/home', driver: 'COOKIES' };\n// Initialize session service from redux\nsessionService.initSessionService(store, options)\n.then(() => console.log('Redux React Session is ready'));\n\n// Provider gives access to the store to the whole app\nReactDom.render(\n<Provider store={store}>\n<App />\n</Provider>\n, reactContentRoot) "]},"metadata":{},"sourceType":"module"}