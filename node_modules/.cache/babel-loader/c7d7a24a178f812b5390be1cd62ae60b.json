{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Documents\\\\git\\\\drouotGitRepo\\\\miniDrouot\\\\drouot_Front\\\\src\\\\components\\\\auctions\\\\auction\\\\articles\\\\article\\\\article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setArticle } from '../../../../../actions/articleAction';\nimport { setBid } from '../../../../../actions/bidAction';\nimport Login from '../../../../login/loginModal';\nimport ArticleCarousel from '../articleCarousel/articleCarousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Article = props => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const article = useSelector(state => state.article);\n  const articles = useSelector(state => state.articles);\n  const highestBid = useSelector(state => state.bid); // const [highestBid, setHighestBid] = useState({});\n  // const [errorMessage, setErrorMessage] = useState(\"\");\n  // const articleId = props.match.params.id;\n\n  const dispatch = useDispatch();\n  dispatch(setArticle(props.location.state.article)); // let socket = new WebSocket(`ws://localhost:8080/ws/article/${article.ID}`)\n  // console.log(\"attempting connection...\")\n  // socket.onmessage = (message) => {\n  //     dispatch(setBid(JSON.parse(message.data)));\n  // }\n  // socket.onopen = () => {\n  //     console.log(\"Success\")\n  // }\n  // socket.onclose = (event) => {\n  //     console.log(\"socket close : \", event);\n  // }\n  // socket.onerror = (error) => {\n  //     console.log(error)\n  // }\n\n  if (user.id !== '') {\n    setTimeout(() => {\n      fetch(`http://localhost:8080/articles/bid/${article.ID}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      }).then(data => {\n        dispatch(setBid(data.data));\n      }).catch(error => {\n        // error.json().then((body) => {\n        //     alert(body.error);\n        // });\n        alert(error);\n      });\n    }, 1000);\n  }\n\n  useEffect(() => {\n    // // Get article\n    // fetch(\n    //     `http://localhost:8080/articles/${articleId}`\n    // ).then((response) => {\n    //     if (response.ok) {\n    //         return response.json();\n    //     }else {\n    //         throw response;\n    //     }\n    // }).then((data) => {\n    //     dispatch(setArticle(data.data));\n    // This is to be replaced by websocket connection !!!\n    // Get highest bid for article\n    fetch(`http://localhost:8080/articles/bid/${article.ID}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    }).then(data => {\n      dispatch(setBid(data.data));\n    }).catch(error => {\n      // error.json().then((body) => {\n      //     alert(body.error);\n      // });\n      alert(error);\n    }); // // Get all articles\n    // fetch(\n    //     `http://localhost:8080/auctions/articles/${data.data.auctionID}`\n    // ).then(response => {\n    //     if (response.ok) {\n    //         return response.json();\n    //     }else {\n    //         throw response;\n    //     }\n    // }).then( (data) => {\n    //     dispatch(setArticles(data.data));\n    // })\n    // }).catch(error => {\n    //     error.json().then((body) => {\n    //         setErrorMessage(body.error);\n    //         return body.error;\n    //     });\n    // })\n  }, [article.ID, dispatch]);\n\n  const createBid = () => {\n    const bid = {\n      bidDate: new Date(),\n      userId: user.id,\n      articleId: article.ID,\n      bidAmount: highestBid.bidAmount === 0 ? Number.parseInt(article.initialOffering) + 10 : Number.parseInt(highestBid.bidAmount) + 10\n    }; // if (socket.readyState === 1) {\n    //     socket.send(JSON.stringify(bid))\n    // }else {\n\n    fetch(`http://localhost:8080/bids`, {\n      method: 'POST',\n      body: JSON.stringify(bid)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response.json();\n      }\n    }).then(data => {\n      console.log(data.data);\n      dispatch(setBid(data.data));\n    }).catch(error => {\n      if (error instanceof Promise) {\n        error.then(error => {\n          // for dev purposes only\n          console.log(error);\n          alert(error);\n        });\n      } else {\n        // for dev purposes\n        console.log(\"not promise\");\n        alert(error);\n      }\n    }); // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-75 my-3\",\n          src: article.photoURL,\n          alt: \"article pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 text-center my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Estimation : \", article.estimation, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Highest bid : \", highestBid === {} || highestBid.bidAmount === 0 ? article.initialOffering : highestBid.bidAmount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), user.id === \"\" ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: createBid,\n          children: \"Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArticleCarousel, {\n      articles: articles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Article, \"+ZHcdyrQLHAlIvElpv688Uzjrpw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/Paul/Documents/git/drouotGitRepo/miniDrouot/drouot_Front/src/components/auctions/auction/articles/article/article.js"],"names":["React","useEffect","Button","useDispatch","useSelector","setArticle","setBid","Login","ArticleCarousel","Article","props","user","state","article","articles","highestBid","bid","dispatch","location","id","setTimeout","fetch","ID","then","response","ok","json","data","catch","error","alert","createBid","bidDate","Date","userId","articleId","bidAmount","Number","parseInt","initialOffering","method","body","JSON","stringify","console","log","Promise","title","photoURL","estimation"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setArticle } from '../../../../../actions/articleAction';\r\nimport { setBid } from '../../../../../actions/bidAction';\r\nimport Login from '../../../../login/loginModal';\r\nimport ArticleCarousel from '../articleCarousel/articleCarousel';\r\n\r\n\r\nconst Article = (props) => {\r\n    const user = useSelector(state => state.user);\r\n    const article = useSelector(state => state.article);\r\n    const articles = useSelector(state => state.articles);\r\n    const highestBid = useSelector(state => state.bid);\r\n    // const [highestBid, setHighestBid] = useState({});\r\n    \r\n    // const [errorMessage, setErrorMessage] = useState(\"\");\r\n    // const articleId = props.match.params.id;\r\n    const dispatch = useDispatch();\r\n    dispatch(setArticle(props.location.state.article))\r\n    // let socket = new WebSocket(`ws://localhost:8080/ws/article/${article.ID}`)\r\n    // console.log(\"attempting connection...\")\r\n\r\n    // socket.onmessage = (message) => {\r\n    //     dispatch(setBid(JSON.parse(message.data)));\r\n    // }\r\n\r\n    // socket.onopen = () => {\r\n    //     console.log(\"Success\")\r\n    // }\r\n    // socket.onclose = (event) => {\r\n    //     console.log(\"socket close : \", event);\r\n    // }\r\n\r\n    // socket.onerror = (error) => {\r\n    //     console.log(error)\r\n    // }\r\n    \r\n    if (user.id !== '') {\r\n        setTimeout(() => {\r\n            fetch(\r\n                `http://localhost:8080/articles/bid/${article.ID}`\r\n            ).then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }else{\r\n                    throw response;\r\n                }\r\n            }).then((data) => {\r\n                dispatch(setBid(data.data));\r\n            }).catch(error => {\r\n                // error.json().then((body) => {\r\n                //     alert(body.error);\r\n                // });\r\n                alert(error)\r\n            })\r\n        }, 1000)\r\n    } \r\n    \r\n    useEffect(() => {\r\n        \r\n        // // Get article\r\n        // fetch(\r\n        //     `http://localhost:8080/articles/${articleId}`\r\n        // ).then((response) => {\r\n        //     if (response.ok) {\r\n        //         return response.json();\r\n        //     }else {\r\n        //         throw response;\r\n        //     }\r\n            \r\n        // }).then((data) => {\r\n        //     dispatch(setArticle(data.data));\r\n        // This is to be replaced by websocket connection !!!\r\n        // Get highest bid for article\r\n        fetch(\r\n            `http://localhost:8080/articles/bid/${article.ID}`\r\n        ).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }else{\r\n                throw response;\r\n            }\r\n        }).then((data) => {\r\n            dispatch(setBid(data.data));\r\n        }).catch(error => {\r\n            // error.json().then((body) => {\r\n            //     alert(body.error);\r\n            // });\r\n            alert(error)\r\n        })\r\n        \r\n            // // Get all articles\r\n            // fetch(\r\n            //     `http://localhost:8080/auctions/articles/${data.data.auctionID}`\r\n            // ).then(response => {\r\n            //     if (response.ok) {\r\n            //         return response.json();\r\n            //     }else {\r\n            //         throw response;\r\n            //     }\r\n            // }).then( (data) => {\r\n            //     dispatch(setArticles(data.data));\r\n            // })\r\n        // }).catch(error => {\r\n        //     error.json().then((body) => {\r\n        //         setErrorMessage(body.error);\r\n        //         return body.error;\r\n        //     });\r\n        // })\r\n        \r\n        \r\n    }, [article.ID, dispatch]);\r\n\r\n    const createBid = () => {\r\n        const bid = {\r\n            bidDate:new Date(), \r\n            userId:user.id, \r\n            articleId:article.ID, \r\n            bidAmount:(highestBid.bidAmount === 0 ? (Number.parseInt(article.initialOffering) + 10) : (Number.parseInt(highestBid.bidAmount) + 10) ),\r\n        }\r\n        // if (socket.readyState === 1) {\r\n        //     socket.send(JSON.stringify(bid))\r\n        // }else {\r\n            fetch(`http://localhost:8080/bids`, {method: 'POST', body: JSON.stringify(bid)})\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }else {\r\n                    throw response.json();\r\n                }\r\n            }).then(data => {\r\n                console.log(data.data);\r\n                dispatch(setBid(data.data))\r\n            }).catch(error => {\r\n                if (error instanceof Promise) {\r\n                  error.then(error => {\r\n                    // for dev purposes only\r\n                    console.log(error);\r\n                    alert(error)\r\n                  })\r\n                }else {\r\n                  // for dev purposes\r\n                  console.log(\"not promise\")\r\n                  alert(error)\r\n                }\r\n              })\r\n        // }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row mx-auto\">\r\n                <div className=\"col-2\">\r\n                </div>\r\n                <div className=\"col-4 text-center\">\r\n                    <h1 className=\"text-center\">{article.title}</h1>\r\n                    <img className=\"w-75 my-3\" src={article.photoURL} alt=\"article pic\" />\r\n                </div>\r\n                <div className=\"col-2 text-center my-auto\">\r\n                    <h4>Estimation : {article.estimation} €</h4>\r\n                    <h5>Highest bid : {highestBid === {} || highestBid.bidAmount === 0 ? article.initialOffering : highestBid.bidAmount} </h5>\r\n                    {user.id === \"\" ? <Login></Login> : <Button variant=\"info\" onClick={createBid}>Bid</Button>}\r\n                    \r\n                </div>\r\n        </div>\r\n        <ArticleCarousel articles={articles} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article"]},"metadata":{},"sourceType":"module"}