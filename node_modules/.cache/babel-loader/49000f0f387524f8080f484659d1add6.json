{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Documents\\\\git\\\\drouotGitRepo\\\\miniDrouot\\\\drouot_Front\\\\src\\\\components\\\\utilisateur\\\\updateForm\\\\updateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Formik, Form as FromikForm, Field } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too Short!').max(20, 'Too long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(20, 'Too long!').required('Required')\n});\nexport const UpdateForm = () => {\n  _s();\n\n  // isLoggedIn is the global state for login\n  const isLoggedIn = useSelector(state => state.login); // currentUser is the global state representing the current user if it exists\n\n  const user = useSelector(state => state.user); // dispatcher for updating isLoggedIn and current user\n\n  const dispatch = useDispatch(); // For dev purposes only (to check the values of the global states)\n\n  useEffect(() => {\n    console.log(user);\n    console.log(isLoggedIn);\n  }, [user, isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: ''\n      },\n      validationSchema: SignInSchema,\n      onSubmit: values => {\n        fetch(`http://localhost:8080/users/${user.id}`, {\n          method: 'PUT',\n          body: JSON.stringify(values)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw response.json();\n          }\n        }).then(response => {\n          console.log(response.data.ID);\n          const user = {\n            id: response.data.ID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            email: response.data.email,\n            role: response.data.role\n          };\n          console.log(user);\n          dispatch(setUser(user));\n        }).catch(error => {\n          if (error instanceof Promise) {\n            error.then(error => {\n              // for dev purposes only\n              console.log(error);\n            });\n          } else {\n            // for dev purposes\n            console.log(\"not promise\");\n            alert(error);\n          }\n        });\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(FromikForm, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control my-2\",\n          name: \"firstName\",\n          type: \"firstName\",\n          value: user.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errors.firstName && touched.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 52\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control my-2\",\n          name: \"lastName\",\n          type: \"lastName\",\n          value: user.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), errors.lastName && touched.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 50\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info pull-right\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UpdateForm, \"gatiZzHcoD+EHvmuKjMjP2j68qk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["C:/Users/Paul/Documents/git/drouotGitRepo/miniDrouot/drouot_Front/src/components/utilisateur/updateForm/updateForm.js"],"names":["React","useEffect","Formik","Form","FromikForm","Field","Yup","useDispatch","useSelector","SignInSchema","object","shape","firstName","string","min","max","required","lastName","UpdateForm","isLoggedIn","state","login","user","dispatch","console","log","values","fetch","id","method","body","JSON","stringify","then","response","ok","json","data","ID","email","role","setUser","catch","error","Promise","alert","errors","touched"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Formik, Form as FromikForm, Field } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst SignInSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(20, 'Too long!')\r\n    .required('Required'),\r\n  lastName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(20, 'Too long!')\r\n    .required('Required')\r\n})\r\n\r\nexport const UpdateForm = () => {\r\n\r\n  // isLoggedIn is the global state for login\r\n  const isLoggedIn = useSelector(state => state.login);\r\n  // currentUser is the global state representing the current user if it exists\r\n  const user = useSelector(state => state.user);\r\n\r\n  // dispatcher for updating isLoggedIn and current user\r\n  const dispatch = useDispatch();\r\n\r\n  // For dev purposes only (to check the values of the global states)\r\n  useEffect(() => {\r\n    console.log(user)\r\n    console.log(isLoggedIn)\r\n  }, [user, isLoggedIn])\r\n\r\n  return(<div>\r\n    <Formik\r\n      initialValues={{\r\n        firstName:'',\r\n        lastName:'',\r\n      }}\r\n      validationSchema={SignInSchema}\r\n      onSubmit={values => {\r\n          fetch(`http://localhost:8080/users/${user.id}`, {method: 'PUT', body: JSON.stringify(values)})\r\n          .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }else {\r\n                throw response.json();\r\n            }\r\n          }).then(response => {\r\n            console.log(response.data.ID)\r\n            const user = {\r\n              id: response.data.ID,\r\n              firstName: response.data.firstName,\r\n              lastName:response.data.lastName,\r\n              email: response.data.email,\r\n              role: response.data.role\r\n            }\r\n            console.log(user)\r\n            dispatch(setUser(user))\r\n          }).catch(error => {\r\n            if (error instanceof Promise) {\r\n              error.then(error => {\r\n                // for dev purposes only\r\n                console.log(error);\r\n              })\r\n            }else {\r\n              // for dev purposes\r\n              console.log(\"not promise\")\r\n              alert(error)\r\n            }\r\n          })\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <FromikForm> \r\n          <Field className=\"form-control my-2\" name=\"firstName\" type=\"firstName\"  value={user.firstName} />\r\n          {errors.firstName && touched.firstName ? <div>{errors.firstName}</div> : null}\r\n\r\n          <Field className=\"form-control my-2\" name=\"lastName\" type=\"lastName\" value={user.lastName} />\r\n          {errors.lastName && touched.lastName ? <div>{errors.lastName}</div> : null}\r\n\r\n          <button className=\"btn btn-info pull-right\" type=\"submit\">Submit</button>\r\n          \r\n        </FromikForm>\r\n      )}\r\n    </Formik>\r\n  </div>)\r\n}\r\n\r\n  export default UpdateForm"]},"metadata":{},"sourceType":"module"}