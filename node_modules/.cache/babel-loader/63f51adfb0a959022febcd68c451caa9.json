{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Desktop\\\\drouotGitRepo\\\\drouot_Front\\\\src\\\\components\\\\auctions\\\\auction\\\\articles\\\\article\\\\article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ArticleCarousel from '../articleCarousel/articleCarousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Article = props => {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState({});\n  const [highestBid, setHighestBid] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const articleId = props.match.params.id;\n  useEffect(() => {\n    // Get article\n    fetch(`http://localhost:8080/articles/${articleId}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    }).then(data => {\n      setArticle(data.data); // Get highest bid for article\n\n      fetch(`http://localhost:8080/articles/bid/${data.data.ID}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      }).then(data => {\n        setHighestBid(data.data);\n      }).catch(error => {\n        error.json().then(body => {\n          setErrorMessage(body.error);\n          return body.error;\n        });\n      }); // Get all articles\n\n      fetch(`http://localhost:8080/auctions/articles/${data.data.auctionID}`).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      }).then(data => {\n        setArticles(data.data);\n      });\n    }).catch(error => {\n      error.json().then(body => {\n        setErrorMessage(body.error);\n        return body.error;\n      });\n    });\n  }, [articleId]);\n\n  const createBid = () => {\n    const bid = {\n      bidDate: new Date(),\n      userId: user.id,\n      articleId: article.ID,\n      bidAmount: Number.parseInt(highestBid.bidAmount) + 10\n    };\n    console.log(JSON.stringify(bid));\n    console.log(bid);\n    console.log(user);\n    console.log(Date.now().toLocaleString());\n    fetch(`http://localhost:8080/bids`, {\n      method: 'POST',\n      body: JSON.stringify(bid)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response.json();\n      }\n    }).then(data => {\n      setHighestBid(data.data);\n    }).catch(error => {\n      if (error instanceof Promise) {\n        error.then(error => {\n          // for dev purposes only\n          console.log(error);\n          alert(error);\n        });\n      } else {\n        // for dev purposes\n        console.log(\"not promise\");\n        alert(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-75 my-3\",\n          src: article.photoURL,\n          alt: \"article pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 text-center my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Estimation : \", article.estimation, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Highest bid : \", errorMessage !== \"\" ? \"none\" : highestBid.bidAmount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info btn-lg px-5 py-3 m-3 \",\n          onClick: createBid,\n          children: \"Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArticleCarousel, {\n      articles: articles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Article, \"kr1cXdiLbkoLUfbajfuzsal8W8o=\", false, function () {\n  return [useSelector];\n});\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/Paul/Desktop/drouotGitRepo/drouot_Front/src/components/auctions/auction/articles/article/article.js"],"names":["React","useEffect","useState","useSelector","ArticleCarousel","Article","props","user","state","articles","setArticles","article","setArticle","highestBid","setHighestBid","errorMessage","setErrorMessage","articleId","match","params","id","fetch","then","response","ok","json","data","ID","catch","error","body","auctionID","createBid","bid","bidDate","Date","userId","bidAmount","Number","parseInt","console","log","JSON","stringify","now","toLocaleString","method","Promise","alert","title","photoURL","estimation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport ArticleCarousel from '../articleCarousel/articleCarousel';\r\n\r\n\r\nconst Article = (props) => {\r\n    const user = useSelector(state => state.user);\r\n    const [articles, setArticles] = useState([]);\r\n    const [article, setArticle] = useState({});\r\n    const [highestBid, setHighestBid] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const articleId = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n            \r\n        // Get article\r\n        fetch(\r\n            `http://localhost:8080/articles/${articleId}`\r\n        ).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }else {\r\n                throw response;\r\n            }\r\n            \r\n        }).then((data) => {\r\n            setArticle(data.data);\r\n            // Get highest bid for article\r\n        fetch(\r\n            `http://localhost:8080/articles/bid/${data.data.ID}`\r\n        ).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }else{\r\n                throw response;\r\n            }\r\n        }).then((data) => {\r\n            setHighestBid(data.data);\r\n        }).catch(error => {\r\n            error.json().then((body) => {\r\n                setErrorMessage(body.error);\r\n                return body.error;\r\n            });\r\n        })\r\n            // Get all articles\r\n            fetch(\r\n                `http://localhost:8080/auctions/articles/${data.data.auctionID}`\r\n            ).then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }else {\r\n                    throw response;\r\n                }\r\n            }).then( (data) => {\r\n                setArticles(data.data);\r\n            })\r\n        }).catch(error => {\r\n            error.json().then((body) => {\r\n                setErrorMessage(body.error);\r\n                return body.error;\r\n            });\r\n        })\r\n        \r\n        \r\n    }, [articleId]);\r\n    const createBid = () => {\r\n        const bid = {\r\n            bidDate:new Date(), \r\n            userId:user.id, \r\n            articleId:article.ID, \r\n            bidAmount:(Number.parseInt(highestBid.bidAmount) + 10),\r\n        }\r\n        console.log(JSON.stringify(bid));\r\n        console.log(bid);\r\n        console.log(user);\r\n        console.log(Date.now().toLocaleString())\r\n        fetch(`http://localhost:8080/bids`, {method: 'POST', body: JSON.stringify(bid)})\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }else {\r\n                    throw response.json();\r\n                }\r\n            }).then(data => {\r\n                setHighestBid(data.data)\r\n            }).catch(error => {\r\n                if (error instanceof Promise) {\r\n                  error.then(error => {\r\n                    // for dev purposes only\r\n                    console.log(error);\r\n                    alert(error)\r\n                  })\r\n                }else {\r\n                  // for dev purposes\r\n                  console.log(\"not promise\")\r\n                  alert(error)\r\n                }\r\n              })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row mx-auto\">\r\n                <div className=\"col-2\">\r\n                </div>\r\n                <div className=\"col-4 text-center\">\r\n                    <h1 className=\"text-center\">{article.title}</h1>\r\n                    <img className=\"w-75 my-3\" src={article.photoURL} alt=\"article pic\" />\r\n                </div>\r\n                <div className=\"col-2 text-center my-auto\">\r\n                    <h4>Estimation : {article.estimation} €</h4>\r\n                    <h5>Highest bid : {errorMessage !== \"\" ? \"none\" : highestBid.bidAmount} </h5>\r\n                    <button className=\"btn btn-info btn-lg px-5 py-3 m-3 \" onClick={createBid} >Bid</button>\r\n                </div>\r\n        </div>\r\n        <ArticleCarousel articles={articles} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article"]},"metadata":{},"sourceType":"module"}