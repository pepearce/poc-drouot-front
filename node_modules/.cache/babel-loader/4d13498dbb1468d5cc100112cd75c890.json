{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul\\\\Documents\\\\git\\\\drouotGitRepo\\\\miniDrouot\\\\drouot_Front\\\\src\\\\components\\\\utilisateur\\\\updateForm\\\\updateForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form as FromikForm, Field } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUser } from '../../../actions/user';\nimport { logout } from '../../../actions/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, 'Too Short!').max(20, 'Too long!').required('Required'),\n  lastName: Yup.string().min(2, 'Too Short!').max(20, 'Too long!').required('Required')\n});\n\nconst UpdateForm = () => {\n  _s();\n\n  // currentUser is the global state representing the current user if it exists\n  const user = useSelector(state => state.user); // dispatcher for updating isLoggedIn and current user\n\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    if (window.confirm(\"Delete ?\")) {\n      fetch(`http://localhost:8080/users/${user.id}`, {\n        method: 'delete'\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      }).then(response => {\n        dispatch(logout());\n        console.log(response);\n        alert(\"Account deleted\");\n      }).catch(error => {\n        if (error instanceof Promise) {\n          error.json().then(body => {\n            console.log(body.error);\n          });\n        } else {\n          alert(error);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: ''\n      },\n      validationSchema: SignInSchema,\n      onSubmit: values => {\n        fetch(`http://localhost:8080/users/${user.id}`, {\n          method: 'PUT',\n          body: JSON.stringify(values)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw response.json();\n          }\n        }).then(response => {\n          console.log(response.data.ID);\n          const user = {\n            id: response.data.ID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            email: response.data.email,\n            role: response.data.role\n          };\n          console.log(user);\n          dispatch(setUser(user));\n        }).catch(error => {\n          if (error instanceof Promise) {\n            error.then(error => {\n              // for dev purposes only\n              console.log(error);\n            });\n          } else {\n            // for dev purposes\n            console.log(\"not promise\");\n            alert(error);\n          }\n        });\n      },\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(FromikForm, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control my-2\",\n          name: \"firstName\",\n          type: \"firstName\",\n          value: user.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), errors.firstName && touched.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 52\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          className: \"form-control my-2\",\n          name: \"lastName\",\n          type: \"lastName\",\n          value: user.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), errors.lastName && touched.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 50\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger pull-right mx-2\",\n          onClick: onDelete,\n          children: \"Delete Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info pull-right mx-2\",\n          type: \"submit\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UpdateForm, \"xXvxOehHJpw/X5Imivu/2I1+3NA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UpdateForm;\nexport default UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["C:/Users/Paul/Documents/git/drouotGitRepo/miniDrouot/drouot_Front/src/components/utilisateur/updateForm/updateForm.js"],"names":["React","Formik","Form","FromikForm","Field","Yup","useDispatch","useSelector","setUser","logout","SignInSchema","object","shape","firstName","string","min","max","required","lastName","UpdateForm","user","state","dispatch","onDelete","window","confirm","fetch","id","method","then","response","ok","json","console","log","alert","catch","error","Promise","body","values","JSON","stringify","data","ID","email","role","errors","touched"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form as FromikForm, Field } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUser } from '../../../actions/user';\r\nimport { logout } from '../../../actions/login';\r\n\r\nconst SignInSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(20, 'Too long!')\r\n    .required('Required'),\r\n  lastName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(20, 'Too long!')\r\n    .required('Required')\r\n})\r\n\r\nconst UpdateForm = () => {\r\n\r\n  // currentUser is the global state representing the current user if it exists\r\n  const user = useSelector(state => state.user);\r\n\r\n  // dispatcher for updating isLoggedIn and current user\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    if (window.confirm(\"Delete ?\")) {\r\n      fetch(`http://localhost:8080/users/${user.id}`, {method: 'delete'})\r\n      .then(response => {\r\n          if (response.ok) {\r\n              return response.json();\r\n          }else {\r\n            throw response;\r\n        }\r\n      }).then(response => {\r\n        dispatch(logout());\r\n        console.log(response);\r\n        alert(\"Account deleted\");\r\n      }).catch(error => {\r\n        if (error instanceof Promise) {\r\n          error.json().then((body) => {\r\n            console.log(body.error);\r\n          });\r\n        }else {\r\n          alert(error)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return(<div>\r\n    <Formik\r\n      initialValues={{\r\n        firstName:'',\r\n        lastName:'',\r\n      }}\r\n      validationSchema={SignInSchema}\r\n      onSubmit={values => {\r\n          fetch(`http://localhost:8080/users/${user.id}`, {method: 'PUT', body: JSON.stringify(values)})\r\n          .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }else {\r\n                throw response.json();\r\n            }\r\n          }).then(response => {\r\n            console.log(response.data.ID)\r\n            const user = {\r\n              id: response.data.ID,\r\n              firstName: response.data.firstName,\r\n              lastName:response.data.lastName,\r\n              email: response.data.email,\r\n              role: response.data.role\r\n            }\r\n            console.log(user)\r\n            dispatch(setUser(user))\r\n          }).catch(error => {\r\n            if (error instanceof Promise) {\r\n              error.then(error => {\r\n                // for dev purposes only\r\n                console.log(error);\r\n              })\r\n            }else {\r\n              // for dev purposes\r\n              console.log(\"not promise\")\r\n              alert(error)\r\n            }\r\n          })\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <FromikForm> \r\n          <Field className=\"form-control my-2\" name=\"firstName\" type=\"firstName\" value={user.firstName} />\r\n          {errors.firstName && touched.firstName ? <div>{errors.firstName}</div> : null}\r\n\r\n          <Field className=\"form-control my-2\" name=\"lastName\" type=\"lastName\" value={user.lastName} />\r\n          {errors.lastName && touched.lastName ? <div>{errors.lastName}</div> : null}\r\n          <button className=\"btn btn-danger pull-right mx-2\" onClick={onDelete}>Delete Profile</button>\r\n          <button className=\"btn btn-info pull-right mx-2\" type=\"submit\">Update Profile</button>\r\n          \r\n          \r\n        </FromikForm>\r\n      )}\r\n    </Formik>\r\n  </div>)\r\n}\r\n\r\nexport default UpdateForm"]},"metadata":{},"sourceType":"module"}